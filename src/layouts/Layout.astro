---
const { title, description } = Astro.props;

import "../styles/global.css";
import Linkedin from "../assets/images/svg/linkedin.svg";

const isHomePage = Astro.url.pathname === "/";
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>{title} | Anastasiya Pavlyk Portfolio</title>
    <meta name="description" content={description} />
    <meta property="og:title" content={`Anastasiya Pavlyk | ${title}`} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content="/opengraph.jpg" />
    <meta property="og:type" content="website" />
    <meta property="og:url" content="https://apavlyk.cc/" />
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={`Anastasiya Pavlyk | ${title}`} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content="/opengraph.jpg" />
    <link rel="canonical" href="https://apavlyk.cc/" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="view-transition" content="same-origin" />
  </head>
  <body class="antialiased md:text-[1.125rem] lg:text-[1.25em] xl:text-[1.5em]">
    <header
      id="header"
      class="wrapper text-em-sm flex justify-between items-center gap-4 sticky top-0 bg-secondary z-6 py-3 after:absolute after:inset-x-0 after:top-0 after:h-full after:bg-secondary after:border-b after:border-grey lg:after:hidden"
    >
      <a href="/" aria-label="Home Page" class="z-1"
        ><span aria-hidden="true">Anastasiya Pavlyk</span></a
      >
      <button
        id="header-btn"
        aria-label="Toggle menu"
        aria-controls="mobile-menu"
        aria-expanded="false"
        class="relative z-1 ps-[12px] cursor-pointer aria-expanded:[&+nav]:opacity-100 aria-expanded:[&+nav]:translate-y-0 aria-expanded:[&+nav_li]:-translate-x-[1em] aria-expanded:[&+nav_li]:opacity-100 aria-expanded:[&+nav>a]:opacity-100 lg:hidden"
      >
        <svg
          width="45"
          height="45"
          viewBox="0 0 45 45"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            id="burger-line-top"
            d="M11 17.7971C15 17 23.1497 14.0369 35 17.7971"
            class="stroke-current"
            stroke-linecap="round"></path>
          <path
            id="burger-line-middle"
            d="M11 24.229C14.0624 22.1377 23.1497 20.5826 35 23.0921"
            class="stroke-current"
            stroke-linecap="round"></path>
          <path
            id="burger-line-bottom"
            d="M11 29.4248C16.5 28.4248 25 27.4248 35 29.2219"
            class="stroke-current"
            stroke-linecap="round"></path>
        </svg>
      </button>
      <nav
        id="mobile-menu"
        class="absolute top-0 left-0 wrapper min-h-svh items-start justify-between pb-6 lg:pb-0 lg:w-auto lg:min-h-auto bg-secondary hidden flex-col gap-[1em] opacity-0 -translate-y-full transition ease-in-out duration-200 **:duration-200 lg:static lg:contents"
        aria-label="Primary"
      >
        <ul
          class="flex flex-col gap-[1em] leading-none pt-[calc(--spacing(9)+45px)] lg:pt-0 *:flex *:opacity-0 *:translate-x-[6em] *:transition lg:*:translate-x-0 lg:*:opacity-100 [&_a]:px-[1em] [&_a]:py-[.66em] [&_a]:rounded-full [&_a]:hover:bg-accent [&_a]:transition-colors lg:flex-row"
        >
          <li class="delay-250">
            <a href='/#work"'>Work</a>
          </li>
          <li class="delay-350"><a href="/#about">About</a></li>
          <li class="delay-450">
            <a href="/#articles">Talks&Articles</a>
          </li>
        </ul>
        <a
          href="https://www.linkedin.com/in/anastasiya-pavlyk/"
          target="_blank"
          class="flex flex-row-reverse items-center gap-x-[.5em] ps-[1em] opacity-0 transition delay-120 lg:opacity-100 lg:ps-0"
        >
          <span>Let's connect</span>
          <Linkedin
            aria-label="LinkedIn Profile"
            fill="currentColor"
            class="w-[1.4em] max-w-[45px] aspect-square"
          />
        </a>
      </nav>
    </header>
    <main
      id="main"
      class="wrapper flex flex-col gap-y-section mb-section pt-16"
    >
      <slot />
    </main>
    <footer
      id="footer"
      class="wrapper grid grid-cols-2 sm:grid-cols-3 items-center gap-4 text-em-sm pb-4"
    >
      <a
        href="#main"
        class="order-3 justify-self-end sm:justify-self-center font-semibold"
        ><svg
          class="inline aspect-[5/4] me-[.66em]"
          style="height: min(1.2em, 24px)"
          aria-hidden="true"
          viewBox="0 0 32 26"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M27.4491 25C27.1523 4.3577 1 6.59398 1 14.5651C1 25 27.4491 17.2513 27.4491 1M27.4491 1L23.5313 4.3577M27.4491 1L31 3.68623"
            class="stroke-current stroke-2"
            stroke-linecap="round"></path>
        </svg>Go up</a
      >
      <svg
        aria-hidden="true"
        viewBox="0 0 38 32"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        class="col-span-2 sm:col-span-1 justify-self-end sm:order-last aspect-[6/5]"
        style="width: min(10svw, 56px)"
      >
        <path
          d="M3.7728 2.66708C13.3481 -1.4078 19.1095 12.7022 19.6998 12.763C20.2901 12.8239 28.0103 -1.89431 35.4311 1.51156C42.852 4.91742 21.6441 32.2561 19.6998 30.955C11.8734 25.7182 -5.80251 6.74196 3.7728 2.66708Z"
          class="stroke-current"
          stroke-linecap="round"></path>
      </svg>
      <p class="sm:order-first">
        Developed by <a href="https://weblateweb.dev/" target="_blank"
          >weblate</a
        >
      </p>
    </footer>
  </body>
</html>

<!-- <script >
  document.addEventListener("DOMContentLoaded", () => {
    const toggleButton = document.getElementById("header-btn");
    const menu = document.getElementById("mobile-menu");

    if (toggleButton && menu) {
      const toggleMenu = () => {
        const isHidden = menu.classList.toggle("hidden");
        toggleButton.setAttribute("aria-expanded", !isHidden);
        menu.setAttribute("data-open", !isHidden);
      };

      toggleButton.addEventListener("click", toggleMenu);
    }
  });
</script> -->

<script is:inline>
  document.addEventListener("DOMContentLoaded", () => {
    const toggleButton = document.getElementById("header-btn");
    const mobileMenu = document.getElementById("mobile-menu");
    const menuLinks = mobileMenu.querySelectorAll("a");

    const openMenu = () => {
      mobileMenu.style.display = "flex";
      document.body.style.overflowY = "hidden";

      requestAnimationFrame(() => {
        toggleButton.setAttribute("aria-expanded", "true");
      });
    };

    const closeMenu = () => {
      mobileMenu.classList.remove("mob-menu_active");
      toggleButton.setAttribute("aria-expanded", "false");
      document.body.style.overflowY = "";

      setTimeout(() => {
        mobileMenu.style.display = "none";
      }, 250);
    };

    toggleButton.addEventListener("click", () => {
      const isOpen = toggleButton.getAttribute("aria-expanded") === "true";
      isOpen ? closeMenu() : openMenu();
    });

    menuLinks.forEach((link) => {
      link.addEventListener("click", () => {
        if (window.innerWidth < 768) {
          closeMenu();
        }

        setTimeout(() => {
          history.replaceState(null, "", window.location.pathname);
        }, 10);
      });
    });

    window.addEventListener("resize", () => {
      if (window.innerWidth > 768 && mobileMenu.style.display === "none") {
        openMenu();
      }
    });
  });
</script>
